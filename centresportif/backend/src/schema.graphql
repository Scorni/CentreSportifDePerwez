#import * from './generated/prisma.graphql'

##query or mutation

type Mutation {
    createRoom(
        name: String!
        price: Float!
        sport: String!
    ): Room!,
    createActuality(
        title: String!
        date: String!
        content : String!
    ): Actuality!,
    createStage(
        title: String!
        date: String!
        content : String!
    ): Stage!,
    createFaq(
        question: String!
        date: String!
        answer : String!
    ): Faq!,
    createSchedule(
        lundi: String!
        mardi: String!
        mercredi: String!
        jeudi: String!
        vendredi: String!
        samedi: String!
        dimanche: String!
        vacances: String!
    ): Schedule!,
    createContact(
        adress: String!  
        fix: String!
        phone: String!
        fax: String!
        mail: String!
        memberOne: String!
        memberTwo: String!
    ): Contact!,
    createLocation(
        sport: String!
        hour: String!
        day: String!
        roomName: String!
        is_paid: Boolean!
    ): Location!,
   
    createBooking(
        idBooking: Int!
        title: String!,
        allDay: Boolean!,
        start: String!,
        end: String!,
        room: String!,
        type: String!,
        is_paid: Boolean!
    ): Booking!,
    signup(
        email: String!
        password: String!
        name: String!
        surname: String!
        adress: String!
        city: String!
        has_bill : Boolean!
    ): User!, 
    signin(
        email: String!,
        password: String!,
    ): User!
    signout: SuccessMessage,
    requestReset(
        email: String!)
    : SuccessMessage,
    resetPassword(
        resetToken : String!,
        password: String!, 
        confirmPassword: String
    !): User!,
    updatePermissions(permissions: [Permission],userId: ID!): User,
    deleteMyLocation(locationId: String!): Location,
    deleteMyBooking(id: String!): Booking,
    deleteActuality(actualityId: String!): Actuality,
    deleteStage(stageId: String!): Stage,
    deleteFaq(faqId: String!): Faq,
    updateSchedule(id : ID!, userId: ID! ,lundi: String!, mardi: String!, mercredi: String!, jeudi: String!, vendredi: String!, samedi: String!,dimanche: String!,vacances: String!): Schedule,
    updateContact(id : ID!, userId: ID! ,adress: String!, fix: String!, phone: String!, fax: String!, mail: String!, memberOne: String!,memberTwo: String!): Contact,
}
type Query {
    rooms: [Room!]!,
    locations: [Location]!,
    bookings: [Booking]!,
    users: [User]!,
    roomsFilter(name: String!,sport : String!): [Room!]!,
    userFilter(id: String!): [User!]!,
    locationFilter: [Location!]!,
    me:User,
    actualities(where: ActualityWhereInput,orderBy: ActualityOrderByInput, skip: Int, first: Int): [Actuality!]!,
    actualitiesConnection(where: ActualityWhereInput): ActualityConnection!,
    stages(where: StageWhereInput,orderBy: StageOrderByInput, skip: Int, first: Int): [Stage!]!,
    stagesConnection(where: StageWhereInput): StageConnection!,
    faqs(where: FaqWhereInput,orderBy: FaqOrderByInput, skip: Int, first: Int): [Faq!]!,
    faqsConnection(where: FaqWhereInput): FaqConnection!,
    schedules: [Schedule!]!,
    scheduleFilter(id: String!): [Schedule!]!,
    contacts: [Contact!]!,
    contactFilter(id: String!): [Contact!]!,
    bookingFilter: [Booking!]!,
}

## not query or mutation

### Room

type Room {
    id: ID!
    name: String! 
    price: Float!
    sport : String!
    uniqueNameSport : String!
}

### Location

type Location {
    id: ID!
    sport: String!
    hour: String!
    day: String!
    is_paid: Boolean
    roomName: Room!
    userId: User!
    uniqueLocationsRoomHourDay: String!
}
type Booking{
    id: ID!
    idBooking: Int!
    title: String!
    allDay: Boolean!
    start: String!
    end: String!
    type: String!
    room: String!
    is_paid: Boolean!
    userId: User!

}

### User

type User {
    id: ID!
    name: String!
    surname: String!
    email: String!
    adress: String!
    city: String!
    permissions : [Permission!]!
}
type SuccessMessage{
    message : String
}

### Actuality

type Actuality {
    id: ID!
    title: String!
    date: String!
    content: String!
}
### Stage

type Stage {
    id: ID!
    title: String!
    date: String!
    content: String!
}
### Faq

type Faq {
    id: ID!
    question: String!
    date: String!
    answer: String!
}

### Schedule

type Schedule {
    id: ID!
    lundi: String!
    mardi: String!
    mercredi: String!
    jeudi: String!
    vendredi: String!
    samedi: String!
    dimanche: String!
    vacances: String!
}

### Contact

type Contact {
    id : ID!
    adress: String!  
    fix: String!
    phone: String!
    fax: String!
    mail: String!
    memberOne: String!
    memberTwo: String!
}